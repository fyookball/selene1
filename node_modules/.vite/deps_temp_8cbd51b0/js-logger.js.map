{
  "version": 3,
  "sources": ["../../js-logger/src/logger.js"],
  "sourcesContent": ["/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.6.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.TRACE = defineLogLevel(1, 'TRACE');\r\n\tLogger.DEBUG = defineLogLevel(2, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(3, 'INFO');\r\n\tLogger.TIME = defineLogLevel(4, 'TIME');\r\n\tLogger.WARN = defineLogLevel(5, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\ttrace: function () {\r\n\t\t\tthis.invoke(Logger.TRACE, arguments);\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.trace = bind(globalLogger, globalLogger.trace);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t} else if (context.level === Logger.TRACE && console.trace) {\r\n\t\t\t\t\thdlr = console.trace;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Createa an alias to useDefaults to avoid reaking a react-hooks rule.\r\n\tLogger.setDefaults = Logger.useDefaults;\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n"],
  "mappings": "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",
  "names": ["import_dist"]
}
