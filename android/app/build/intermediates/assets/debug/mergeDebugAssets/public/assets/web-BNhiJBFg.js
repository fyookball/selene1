import{W as s,__tla as c}from"./index-BEjSkI0g.js";import"torboar";let i,o,r=Promise.all([(()=>{try{return c}catch{}})()]).then(async()=>{function a(){const n=window.navigator.connection||window.navigator.mozConnection||window.navigator.webkitConnection;let e="unknown";const t=n?n.type||n.effectiveType:null;if(t&&typeof t=="string")switch(t){case"bluetooth":case"cellular":e="cellular";break;case"none":e="none";break;case"ethernet":case"wifi":case"wimax":e="wifi";break;case"other":case"unknown":e="unknown";break;case"slow-2g":case"2g":case"3g":e="cellular";break;case"4g":e="wifi";break}return e}o=class extends s{constructor(){super(),this.handleOnline=()=>{const n={connected:!0,connectionType:a()};this.notifyListeners("networkStatusChange",n)},this.handleOffline=()=>{const n={connected:!1,connectionType:"none"};this.notifyListeners("networkStatusChange",n)},typeof window<"u"&&(window.addEventListener("online",this.handleOnline),window.addEventListener("offline",this.handleOffline))}async getStatus(){if(!window.navigator)throw this.unavailable("Browser does not support the Network Information API");const n=window.navigator.onLine,e=a();return{connected:n,connectionType:n?e:"none"}}},i=new o});export{i as Network,o as NetworkWeb,r as __tla};
